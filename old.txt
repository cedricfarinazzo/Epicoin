        // local 
        
        public static void Evolve()
        {
            while (Program._continue)
            {
                Transaction(creator, ced.Address[0], 7);
                Transaction(creator, ced.Address[0], 1);
                Transaction(creator, bob.Address[0], 3);
                Transaction(creator, alice.Address[0], 10);
                Transaction(bob, alice.Address[0], 2);
                Transaction(alice, bob.Address[0], 3);
                Transaction(bob, alice.Address[0], 1);
                Transaction(creator, ced.Address[0], 1);
                
                Coin.AddTransaction(new Transaction(creator.Address[0], ced.Address[0], 7));
                Coin.AddTransaction(new Transaction(creator.Address[0], ced.Address[0], 1));
                Coin.AddTransaction(new Transaction(creator.Address[0], bob.Address[0], 3));
                Coin.AddTransaction(new Transaction(creator.Address[0], alice.Address[0], 10));
                Coin.AddTransaction(new Transaction(bob.Address[0], alice.Address[0], 2));
                Coin.AddTransaction(new Transaction(alice.Address[0], bob.Address[0], 3));
                Coin.AddTransaction(new Transaction(bob.Address[0], alice.Address[0], 1));
                Coin.AddTransaction(new Transaction(creator.Address[0], ced.Address[0], 1));
                
                Thread.Sleep(2500);
            }
            
        }
        
        
        
                public static void Mine(object worker)
                {
                    while (_continue)
                    {
                        Coin.MinePendingTransaction((string) worker);
                    }
                }
                
                // verify
        
                
                public static void Verify()
                {
                    Console.WriteLine("\n\nChain is valid : " + Coin.IsvalidChain());
                    Console.WriteLine(creator.Name + " ; amount : " +
                                      creator.TotalAmount().ToString());
                    Console.WriteLine(bob.Name + " ; amount : " +
                                      bob.TotalAmount().ToString());
                    Console.WriteLine(alice.Name + " ; amount : " +
                                      alice.TotalAmount().ToString());
                    Console.WriteLine(ced.Name + " ; amount : " +
                                      ced.TotalAmount().ToString());
                    Console.WriteLine("nb pending transactions : " + (Coin.Pending.Count + (Coin.BlockToMines.Count * Block.nb_trans)));
                    Console.WriteLine("nb block : " + Coin.Chainlist.Count);
                }
                